version: '3.7'

services:

  db:
    build:
      context: .
      dockerfile: Data/Dockerfile
    environment:
      - MSSQL_SA_PASSWORD=${DB_PASSWORD}
    image: digitalexcellence/database
    networks:
      mssql-network:
        ipv4_address: 172.16.238.2

  rabbitmq:
    image: 'bitnami/rabbitmq:3.8.9'
    environment:
      - RABBITMQ_USERNAME=${App__RabbitMQ__Username}
      - RABBITMQ_PASSWORD=${App__RabbitMQ__Password}
    ports:
      - 5672:5672
      - 5671:5671
      - 15672:15672
    networks:
      rabbitmq-network:

  api:
    build:
      context: .
      dockerfile: API/Dockerfile
    depends_on:
      - db
    environment:
      - ConnectionStrings__DefaultConnection=${CONNECTION_STRING}
      - App__Frontend__FrontendUrl=${FRONTEND_URL}
      - App__Frontend__ClientId=${FRONTEND_CLIENT_ID}
      - App__Frontend__ClientSecret=${FRONTEND_CLIENT_SECRET}
      - App__IdentityServer__IdentityUrl=${IDENTITY_URL}
      - App__IdentityServer__ClientId=${API_CLIENT_ID}
      - App__IdentityServer__ClientSecret=${API_AUTHENTICATION_CLIENT_SECRET}
      - SENTRY_DSN=${SENTRY_DSN}
      - App__RabbitMQ__Hostname=${App__RabbitMQ__Hostname}
      - App__RabbitMQ__Username=${App__RabbitMQ__Username}
      - App__RabbitMQ__Password=${App__RabbitMQ__Password}
      - App__DataSources__Github__ClientId=${App__DataSources__Github__ClientId}
      - App__DataSources__Github__ClientSecret=${App__DataSources__Github__ClientSecret}
      - App__DataSources__Github__RedirectUri=${App__DataSources__Github__RedirectUri}
      - App__DataSources__Gitlab__ClientId=${App__DataSources__Gitlab__ClientId}
      - App__DataSources__Gitlab__ClientSecret=${App__DataSources__Gitlab__ClientSecret}
      - App__DataSources__Gitlab__RedirectUri=${App__DataSources__Gitlab__RedirectUri}
      - App__Elastic__Hostname=${App__ElasticSearch__Hostname}
      - App__Elastic__Username=${App__ElasticSearch__Username}
      - App__Elastic__Password=${App__ElasticSearch__Password}
      - App__Elastic__IndexUrl=${App__ElasticSearch__IndexUrl} 
    image:  digitalexcellence/api
    networks:
      mssql-network:
      rabbitmq-network:

  identity:
    build:
      context: .
      dockerfile: IdentityServer/Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=${IDENTITY_CONNECTION_STRING}
      - App__Self__JwtAuthority=${JWT_AUTHORITY}
      - App__Api__DeXApiUrl=${API_URL}
      - App__Api__ClientId=${API_CLIENT_ID}
      - App__Api__ClientSecret=${API_CLIENT_SECRET}
      - App__ApiAuthentication__ClientId=${API_CLIENT_ID}
      - App__ApiAuthentication__ClientSecret=${API_AUTHENTICATION_CLIENT_SECRET}
      - App__Frontend__RedirectUriFrontend=${REDIRECT_URI_FRONTEND}
      - App__Frontend__RefreshUriFrontend=${REFRESH_URI_FRONTEND}
      - App__Frontend__RedirectUriFrontendPostman=${REDIRECT_URI_FRONTEND_POSTMAN}
      - App__Frontend__PostLogoutUrisFrontend=${POST_LOGOUT_URIS_FRONTEND}
      - App__Frontend__ClientId=${FRONTEND_CLIENT_ID}
      - App__Frontend__ClientSecret=${FRONTEND_CLIENT_SECRET}
      - App__swagger__RedirectUrisSwagger=${REDIRECT_URIS_SWAGGER}
      - App__swagger__PostLogoutUrisSwagger=${POST_LOGOUT_URIS_SWAGGER}
      - App__FfhictOIDC__ClientId=${FFHICTOIDC_CLIENT_ID}
      - App__FfhictOIDC__ClientSecret=${FFHICTOIDC_CLIENT_SECRET}
      - App__FfhictOIDC__RedirectUri=${FFHICTOIDC_REDIRECT_URI}
      - App__JobScheduler__ClientId=${JOBSCHEDULER_IDENTITY_CLIENTID}
      - App__JobScheduler__ClientSecet=${JOBSCHEDULER_IDENTITY_CLIENTSECRET}
      - SENTRY_DSN=${SENTRY_DSN}  
    image: digitalexcellence/identity

  notificationservice:
    image:  digitalexcellence/notificationservice
    build:
      context: .
      dockerfile: NotificationSystem/Dockerfile
    depends_on:
      - rabbitmq
    environment:
      - App__RabbitMQ__Hostname=${App__RabbitMQ__Hostname}
      - App__RabbitMQ__Username=${App__RabbitMQ__Username}
      - App__RabbitMQ__Password=${App__RabbitMQ__Password}
      - App__SendGrid__ApiKey=${App__SendGrid__ApiKey}
      - App__SendGrid__EmailFrom=${App__SendGrid__EmailFrom}
    stdin_open: true
    tty: true
    networks:
      rabbitmq-network:

  jobscheduler:
    image:  digitalexcellence/jobscheduler
    build:
      context: .
      dockerfile: JobScheduler/Dockerfile
    container_name: jobscheduler
    restart: on-failure
    environment:
        - Config__IdentityServerConfig__IdentityUrl=${IDENTITY_URL}
        - Config__IdentityServerConfig__ClientId=${JOBSCHEDULER_IDENTITY_CLIENTID}
        - Config__IdentityServerConfig__ClientSecret=${JOBSCHEDULER_IDENTITY_CLIENTSECRET}
        - Config__ApiConfig__ApiUrl=${API_URL}
        - Config__RabbitMQ__Hostname=${App__RabbitMQ__Hostname}
        - Config__RabbitMQ__Username=${App__RabbitMQ__Username}
        - Config__RabbitMQ__Password=${App__RabbitMQ__Password}
    networks:
        rabbitmq-network:
        
  elasticsynchronizer:
    image:  digitalexcellence/elasticsynchronizer
    container_name: elasticsynchronizer
    restart: on-failure
    build: 
      context: .
      dockerfile: ElasticSynchronizer/Dockerfile
    depends_on: 
      - rabbitmq
    environment:
      - App__RabbitMQ__Hostname=${App__RabbitMQ__Hostname}
      - App__RabbitMQ__Username=${App__RabbitMQ__Username}
      - App__RabbitMQ__Password=${App__RabbitMQ__Password}
      - App__Elastic__Hostname=${App__ElasticSearch__Hostname}
      - App__Elastic__Username=${App__ElasticSearch__Username}
      - App__Elastic__Password=${App__ElasticSearch__Password}
      - App__Elastic__IndexUrl=${App__ElasticSearch__IndexUrl}
    networks:
      rabbitmq-network:
      mssql-network:
      
  elasticsearch:
    image:  digitalexcellence/elasticsearch
    container_name: elasticsearch
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: 7.10.0
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: bind
        source: ./elasticsearch/config/analysis/wn_s.txt
        target: /usr/share/elasticsearch/config/analysis/wn_s.txt
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: ${App__ElasticSearch__Password}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      mssql-network: 

volumes:
  elasticsearch:

networks:
  mssql-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
    external: false
  rabbitmq-network:
    driver: bridge

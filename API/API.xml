<?xml version="1.0"?>
<doc>
    <assembly>
        <name>1_API</name>
    </assembly>
    <members>
        <member name="T:API.Configuration.Config.SelfConfig">
            <summary>
            
            </summary>
        </member>
        <member name="P:API.Configuration.Config.SelfConfig.FrontEnd">
            <summary>
            Gets or sets the front end.
            </summary>
            <value>
            The front end.
            </value>
        </member>
        <member name="P:API.Configuration.Config.SelfConfig.ClientId">
            <summary>
            Gets or sets the client identifier.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="P:API.Configuration.Config.SelfConfig.ClientSecret">
            <summary>
            Gets or sets the client secret.
            </summary>
            <value>
            The client secret.
            </value>
        </member>
        <member name="T:API.Configuration.Config.IdentityServerConfig">
            <summary>
            
            </summary>
        </member>
        <member name="P:API.Configuration.Config.IdentityServerConfig.IdentityUrl">
            <summary>
            Gets or sets the identity URL.
            </summary>
            <value>
            The identity URL.
            </value>
        </member>
        <member name="P:API.Configuration.Config.OriginalConfiguration">
            <summary>
            Gets or sets the original configuration.
            </summary>
            <value>
            The original configuration.
            </value>
        </member>
        <member name="P:API.Configuration.Config.Self">
            <summary>
            Gets or sets the self.
            </summary>
            <value>
            The self.
            </value>
        </member>
        <member name="P:API.Configuration.Config.IdentityServer">
            <summary>
            Gets or sets the identity server.
            </summary>
            <value>
            The identity server.
            </value>
        </member>
        <member name="M:API.Configuration.Config.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:API.Configuration.Config"/> class.
            </summary>
        </member>
        <member name="M:API.Configuration.Config.Validate">
            <summary>
            Validates this instance.
            </summary>
        </member>
        <member name="T:API.Configuration.MappingProfile">
            <summary>
            This profiles adds every resource mapping.
            </summary>
        </member>
        <member name="M:API.Configuration.MappingProfile.#ctor">
            <summary>
            Create a map for every resource mapping.
            </summary>
        </member>
        <member name="T:API.Controllers.ProjectController">
            <summary>
            This controller handles the CRUD projects
            </summary>
        </member>
        <member name="M:API.Controllers.ProjectController.#ctor(Services.Services.IProjectService,AutoMapper.IMapper)">
            <summary>
            Initialize a new instance of ProjectController
            </summary>
            <param name="projectService"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:API.Controllers.ProjectController.GetProject(System.Int32)">
            <summary>
            Get a project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.ProjectController.CreateProject(API.Resources.ProjectResource)">
            <summary>
            Create a Project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.ProjectController.UpdateProject(System.Int32,API.Resources.ProjectResource)">
            <summary>
            Update the Project
            </summary>
            <param name="projectId"></param>
            <param name="projectResource"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.ProjectController.DeleteProject(System.Int32)">
            <summary>
            deletes a project.
            </summary>
            <returns></returns>
        </member>
        <member name="T:API.Controllers.SearchController">
            <summary>
            The controller that handles search requests
            </summary>
        </member>
        <member name="T:API.Controllers.UserController">
            <summary>
            This controller handles the user settings.
            </summary>
        </member>
        <member name="M:API.Controllers.UserController.#ctor(Services.Services.IUserService,AutoMapper.IMapper)">
            <summary>
            Initialize a new instance of UserController
            </summary>
            <param name="userService"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:API.Controllers.UserController.GetUser(System.Int32)">
            <summary>
            Get a user account.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.UserController.CreateAccount(API.Resources.UserResource)">
            <summary>
            Create a user account.
            </summary>
            <param name="accountResource"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.UserController.UpdateAccount(System.Int32,API.Resources.UserResource)">
            <summary>
            Update the User account.
            </summary>
            <param name="userId"></param>
            <param name="userResource"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.UserController.DeleteAccount(System.Int32)">
            <summary>
            Gets the student information.
            </summary>
            <returns></returns>
        </member>
        <member name="T:API.Extensions.AutoMapperExtensions">
            <summary>
            AutoMapperExtensions
            </summary>
        </member>
        <member name="M:API.Extensions.AutoMapperExtensions.AddAutoMapper(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the autoMapper.
            </summary>
            <param name="services">The services.</param>
            <returns></returns>
        </member>
        <member name="T:API.Extensions.DependencyInjectionExtensions">
            <summary>
            DependencyInjectionExtensions
            </summary>
        </member>
        <member name="M:API.Extensions.DependencyInjectionExtensions.AddServicesAndRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds all the services and repositories.
            </summary>
            <param name="services">The services.</param>
            <returns></returns>
        </member>
        <member name="T:API.Extensions.ServicesExtensions">
            <summary>
            ServicesExtensions
            </summary>
        </member>
        <member name="M:API.Extensions.ServicesExtensions.AddPolicies(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the policies.
            </summary>
            <param name="services">The services.</param>
            <returns></returns>
        </member>
        <member name="M:API.Extensions.UsersExtensions.GetStudentId(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Gets the student identifier asynchronous.
            </summary>
            <param name="claimsPrincipal">The claims principal.</param>
            <param name="actionContext">The action context.</param>
            <returns></returns>
            <exception cref="T:System.Exception">The back-end header isn't added!</exception>
            <exception cref="T:System.NotSupportedException">The jwt doesn't have a sub</exception>
            <exception cref="T:System.Exception">The back-end header isn't added!</exception>
        </member>
        <member name="M:API.Extensions.UsersExtensions.GetStudentName(System.Security.Principal.IPrincipal)">
            <summary>
            Gets the name of the student.
            </summary>
            <param name="iUserPrincipal">The i user principal.</param>
            <returns></returns>
        </member>
        <member name="T:API.Program">
            <summary>
            the main starting point of the program.
            </summary>
        </member>
        <member name="M:API.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:API.Program.CreateHostBuilder(System.String[])">
            <summary>
            The kestrel builder.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:API.Resources.ProjectResource">
            <summary>
            The view model of a project
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResource.UserId">
            <summary>
            This gets or sets the userId
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResource.Name">
            <summary>
            This gets or sets the Title
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResource.Description">
            <summary>
            This gets or sets the Description
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResource.Url">
            <summary>
            This gets or sets the Url
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResource.collaborators">
            <summary>
            This gets or sets the collaborators
            </summary>
        </member>
        <member name="T:API.Resources.ProjectResourceResult">
            <summary>
            The view model result of project
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResourceResult.UserId">
            <summary>
            This gets or sets the userId
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResourceResult.Title">
            <summary>
            This gets or sets the Title
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResourceResult.Description">
            <summary>
            This gets or sets the Description
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResourceResult.Url">
            <summary>
            This gets or sets the Url
            </summary>
        </member>
        <member name="T:API.Resources.UserResource">
            <summary>
            The view model of a user
            </summary>
        </member>
        <member name="P:API.Resources.UserResource.Name">
            <summary>
            This gets or sets the Name
            </summary>
        </member>
        <member name="P:API.Resources.UserResource.ProfileUrl">
            <summary>
            This gets or sets the ProfileUrl
            </summary>
        </member>
        <member name="T:API.Resources.UserResourceResult">
            <summary>
            the view model result of user.
            </summary>
        </member>
        <member name="P:API.Resources.UserResourceResult.Name">
            <summary>
            This gets or sets the Name
            </summary>
        </member>
        <member name="P:API.Resources.UserResourceResult.ProfileUrl">
            <summary>
            This gets or sets the ProfileUrl
            </summary>
        </member>
        <member name="T:API.Startup">
            <summary>
            The main configuration of the app.
            </summary>
        </member>
        <member name="P:API.Startup.Config">
            <summary>
            the class that holds the dynamic configuration.
            </summary>
        </member>
        <member name="P:API.Startup.Environment">
            <summary>
            the class that holds the environment settings.
            </summary>
        </member>
        <member name="M:API.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            startup getter.
            </summary>
            <param name="configuration"></param>
            <param name="environment"></param>
        </member>
        <member name="M:API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            the service configuration.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Configures the specified application.
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">The application.</param>
            <param name="env">The env.</param>
        </member>
        <member name="M:API.Startup.Initialize(System.IServiceProvider)">
            <summary>
            Initializes the specified services.
            </summary>
            <param name="services">The services.</param>
        </member>
    </members>
</doc>

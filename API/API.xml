<?xml version="1.0"?>
<doc>
    <assembly>
        <name>1_API</name>
    </assembly>
    <members>
        <member name="T:API.Configuration.Config.FrontendConfig">
            <summary>
            
            </summary>
        </member>
        <member name="P:API.Configuration.Config.FrontendConfig.FrontendUrl">
            <summary>
            Gets or sets the front end.
            </summary>
            <value>
            The front end.
            </value>
        </member>
        <member name="P:API.Configuration.Config.FrontendConfig.ClientId">
            <summary>
            Gets or sets the client identifier.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="P:API.Configuration.Config.FrontendConfig.ClientSecret">
            <summary>
            Gets or sets the client secret.
            </summary>
            <value>
            The client secret.
            </value>
        </member>
        <member name="T:API.Configuration.Config.IdentityServerConfig">
            <summary>
            
            </summary>
        </member>
        <member name="P:API.Configuration.Config.IdentityServerConfig.IdentityUrl">
            <summary>
            Gets or sets the identity URL.
            </summary>
            <value>
            The identity URL.
            </value>
        </member>
        <member name="P:API.Configuration.Config.OriginalConfiguration">
            <summary>
            Gets or sets the original configuration.
            </summary>
            <value>
            The original configuration.
            </value>
        </member>
        <member name="P:API.Configuration.Config.Frontend">
            <summary>
            Gets or sets the self.
            </summary>
            <value>
            The self.
            </value>
        </member>
        <member name="P:API.Configuration.Config.IdentityServer">
            <summary>
            Gets or sets the identity server.
            </summary>
            <value>
            The identity server.
            </value>
        </member>
        <member name="M:API.Configuration.Config.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:API.Configuration.Config"/> class.
            </summary>
        </member>
        <member name="M:API.Configuration.Config.Validate">
            <summary>
            Validates this instance.
            </summary>
        </member>
        <member name="T:API.Configuration.MappingProfile">
            <summary>
            This profiles adds every resource mapping.
            </summary>
        </member>
        <member name="M:API.Configuration.MappingProfile.#ctor">
            <summary>
            Create a map for every resource mapping.
            </summary>
        </member>
        <member name="T:API.Controllers.ProjectController">
            <summary>
            This controller handles the CRUD projects
            </summary>
        </member>
        <member name="M:API.Controllers.ProjectController.#ctor(Services.Services.IProjectService,Services.Services.IUserService,AutoMapper.IMapper)">
            <summary>
            Initialize a new instance of ProjectController
            </summary>
            <param name="projectService"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:API.Controllers.ProjectController.GetAllProjects">
            <summary>
            Get all projects.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.ProjectController.GetProject(System.Int32)">
            <summary>
            Get a project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.ProjectController.CreateProjectAsync(API.Resources.ProjectResource)">
            <summary>
            Create a Project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.ProjectController.UpdateProject(System.Int32,API.Resources.ProjectResource)">
            <summary>
            Update the Project
            </summary>
            <param name="projectId"></param>
            <param name="projectResource"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.ProjectController.DeleteProject(System.Int32)">
            <summary>
            deletes a project.
            </summary>
            <returns></returns>
        </member>
        <member name="T:API.Controllers.SearchController">
            <summary>
            The controller that handles search requests
            </summary>
        </member>
        <member name="M:API.Controllers.SearchController.SearchInternalProjects(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Search for projects
            </summary>
            <param name="query">The search query</param>
            <returns>Search results</returns>
        </member>
        <member name="T:API.Controllers.UserController">
            <summary>
            This controller handles the user settings.
            </summary>
        </member>
        <member name="M:API.Controllers.UserController.#ctor(Services.Services.IUserService,AutoMapper.IMapper)">
            <summary>
            Initialize a new instance of UserController
            </summary>
            <param name="userService"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:API.Controllers.UserController.GetUser(System.Int32)">
            <summary>
            Get a user account.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.UserController.CreateAccount(API.Resources.UserResource)">
            <summary>
            Create a user account.
            </summary>
            <param name="accountResource"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.UserController.UpdateAccount(System.Int32,API.Resources.UserResource)">
            <summary>
            Update the User account.
            </summary>
            <param name="userId"></param>
            <param name="userResource"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.UserController.DeleteAccount(System.Int32)">
            <summary>
            Gets the student information.
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Extensions.AuthorizeScopeAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="claimValue"></param>
        </member>
        <member name="T:API.Extensions.AuthorizeScopeFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:API.Extensions.AuthorizeScopeFilter.#ctor(System.Security.Claims.Claim)">
            <summary>
            
            </summary>
            <param name="claim"></param>
        </member>
        <member name="M:API.Extensions.AuthorizeScopeFilter.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:API.Extensions.AutoMapperExtensions">
            <summary>
            AutoMapperExtensions
            </summary>
        </member>
        <member name="M:API.Extensions.AutoMapperExtensions.AddAutoMapper(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the autoMapper.
            </summary>
            <param name="services">The services.</param>
            <returns></returns>
        </member>
        <member name="T:API.Extensions.DependencyInjectionExtensions">
            <summary>
            DependencyInjectionExtensions
            </summary>
        </member>
        <member name="M:API.Extensions.DependencyInjectionExtensions.AddServicesAndRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds all the services and repositories.
            </summary>
            <param name="services">The services.</param>
            <returns></returns>
        </member>
        <member name="T:API.Extensions.ServicesExtensions">
            <summary>
            ServicesExtensions
            </summary>
        </member>
        <member name="M:API.Extensions.ServicesExtensions.AddPolicies(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the policies.
            </summary>
            <param name="services">The services.</param>
            <returns></returns>
        </member>
        <member name="M:API.Extensions.UsersExtensions.GetStudentId(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Gets the student identifier asynchronous.
            </summary>
            <param name="claimsPrincipal">The claims principal.</param>
            <param name="actionContext">The action context.</param>
            <returns></returns>
            <exception cref="T:System.Exception">The back-end header isn't added!</exception>
            <exception cref="T:System.NotSupportedException">The jwt doesn't have a sub</exception>
            <exception cref="T:System.Exception">The back-end header isn't added!</exception>
        </member>
        <member name="M:API.Extensions.UsersExtensions.GetStudentName(System.Security.Principal.IPrincipal)">
            <summary>
            Gets the name of the student.
            </summary>
            <param name="iUserPrincipal">The i user principal.</param>
            <returns></returns>
        </member>
        <member name="T:API.Helpers.Seed">
            <summary>
            Class for helpers to seed data into the database
            </summary>
        </member>
        <member name="M:API.Helpers.Seed.#ctor(AutoMapper.IMapper,Services.Services.IUserService,Services.Services.IProjectService)">
            <summary>
            Prepare for seed
            </summary>
            <param name="mapper"></param>
            <param name="userService"></param>
            <param name="projectService"></param>
        </member>
        <member name="M:API.Helpers.Seed.SeedUsers">
            <summary>
            Seed random users into the database using fake date from Bogus
            </summary>
        </member>
        <member name="M:API.Helpers.Seed.SeedProjects">
            <summary>
            Seed random projects into the database using fake date from Bogus
            </summary>
        </member>
        <member name="T:API.Resources.ProjectResource">
            <summary>
            The view model of a project
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResource.UserId">
            <summary>
            This gets or sets the userId
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResource.Name">
            <summary>
            This gets or sets the Title
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResource.Description">
            <summary>
            This gets or sets the Description
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResource.ShortDescription">
            <summary>
            This gets or sets the Short description of the project
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResource.Uri">
            <summary>
            This gets or sets the Uri
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResource.Collaborators">
            <summary>
            This gets or sets the collaborators
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResource.Created">
            <summary>
            This gets or sets the Created time of the project
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResource.Updated">
            <summary>
            This gets or sets the Updated time of the project
            </summary>
        </member>
        <member name="T:API.Resources.ProjectResourceResult">
            <summary>
            The view model result of project
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResourceResult.UserId">
            <summary>
            This gets or sets the userId
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResourceResult.Name">
            <summary>
            This gets or sets the Name
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResourceResult.Description">
            <summary>
            This gets or sets the Description
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResourceResult.ShortDescription">
            <summary>
            This gets or sets the Short Description
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResourceResult.Uri">
            <summary>
            This gets or sets the Uri
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResourceResult.Collaborators">
            <summary>
            This gets or sets the collaborators
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResourceResult.Created">
            <summary>
            This gets or sets the Created time of the project
            </summary>
        </member>
        <member name="P:API.Resources.ProjectResourceResult.Updated">
            <summary>
            This gets or sets the Updated time of the project
            </summary>
        </member>
        <member name="T:API.Resources.UserResource">
            <summary>
            The view model of a user
            </summary>
        </member>
        <member name="P:API.Resources.UserResource.Name">
            <summary>
            This gets or sets the Name
            </summary>
        </member>
        <member name="P:API.Resources.UserResource.Email">
            <summary>
            This gets or sets the email
            </summary>
        </member>
        <member name="P:API.Resources.UserResource.IdentityId">
            <summary>
            This gets or sets the Identity Id from external identity provider
            </summary>
        </member>
        <member name="P:API.Resources.UserResource.Services">
            <summary>
            This gets or sets the linked services
            </summary>
        </member>
        <member name="P:API.Resources.UserResource.ProfileUrl">
            <summary>
            This gets or sets the ProfileUrl
            </summary>
        </member>
        <member name="T:API.Resources.UserResourceResult">
            <summary>
            the view model result of user.
            </summary>
        </member>
        <member name="P:API.Resources.UserResourceResult.Id">
            <summary>
            This gets or sets the Id
            </summary>
        </member>
        <member name="P:API.Resources.UserResourceResult.Name">
            <summary>
            This gets or sets the Name
            </summary>
        </member>
        <member name="P:API.Resources.UserResourceResult.Email">
            <summary>
            This gets or sets the Email
            </summary>
        </member>
        <member name="P:API.Resources.UserResourceResult.IdentityId">
            <summary>
            This gets or sets the Identity Id of an external provider
            </summary>
        </member>
        <member name="P:API.Resources.UserResourceResult.ProfileUrl">
            <summary>
            This gets or sets the ProfileUrl
            </summary>
        </member>
        <member name="M:API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Configures the specified application.
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">The application.</param>
            <param name="env">The env.</param>
        </member>
        <member name="M:API.Startup.UpdateDatabase(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Initializes the database
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:API.Startup.SeedDatabase(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Initializes the database
            </summary>
            <param name="app"></param>
        </member>
    </members>
</doc>
